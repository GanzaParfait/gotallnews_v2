let commentInterval;const showComment=document.querySelector('.show-comment-container');const articleID=document.getElementById('article_id').value;function showRepliedComm(commID){document.getElementById('replied-comm-'+commID).classList.toggle('toggle-replies');if(document.getElementById('replied-comm-'+commID).classList.contains('toggle-replies')){startCommentInterval(35*60*1000)}else{startCommentInterval(500)}}
function startCommentInterval(time){if(commentInterval){clearInterval(commentInterval)}
commentInterval=setInterval(()=>{let xhr=new XMLHttpRequest();xhr.open("GET",`backend/php/get_comment.php?gp=${articleID}`,!0);xhr.onload=()=>{if(xhr.readyState==4&&xhr.status==200){let response=xhr.response;showComment.innerHTML=response}};xhr.send()},time)}
startCommentInterval(500);function showReplyForm(commentId){document.getElementById('reply-form-'+commentId).classList.toggle('show-hide');startCommentInterval(35*60*1000)}
function submitReply(commentId){var replyText=document.getElementById('reply-text-'+commentId).value;var userId=document.getElementById('user_id').value;var ArticleId=document.getElementById('article_id').value;var replyCont=document.querySelector('.reply-btn-area');if(replyCont.classList.contains('disabled')){alert('Sign in with Google in order to reply on this comment!');window.location.href='signin.php';return}
if(replyText===''){}else{var xhr=new XMLHttpRequest();xhr.open("POST","backend/php/submit_reply.php",!0);xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");xhr.onreadystatechange=function(){if(xhr.readyState==4&&xhr.status==200){let response=xhr.responseText;if(response==='sent'){document.getElementById('reply-text-'+commentId).value='';startCommentInterval(500)}}};xhr.send("user_id="+userId+"&article_id="+ArticleId+"&parentId="+commentId+"&reply="+encodeURIComponent(replyText))}
return!1}
function likeRepliedComment(RepliedCommentID){fetch('backend/php/like_replied_comment.php',{method:'POST',headers:{'Content-Type':'application/json',},body:JSON.stringify({RepliedCommentID:RepliedCommentID,action:'like'}),}).then(response=>response.json()).then(data=>{if(data.success){toggleReplyLikeDislikeIcons(RepliedCommentID,'like')}else{console.log('Failed to record the like.')}}).catch((error)=>{console.error('Error:',error)})}
function dislikeRepliedComment(RepliedCommentID){fetch('backend/php/like_replied_comment.php',{method:'POST',headers:{'Content-Type':'application/json',},body:JSON.stringify({RepliedCommentID:RepliedCommentID,action:'dislike'}),}).then(response=>response.json()).then(data=>{if(data.success){toggleReplyLikeDislikeIcons(RepliedCommentID,'dislike')}else{console.log('Failed to record the dislike.')}}).catch((error)=>{console.error('Error:',error)})}
function likeComment(CommentID){fetch('backend/php/like_comment.php',{method:'POST',headers:{'Content-Type':'application/json',},body:JSON.stringify({CommentID:CommentID,action:'like'}),}).then(response=>response.json()).then(data=>{if(data.success){toggleLikeDislikeIcons(CommentID,'like')}else{console.log('Failed to record the like.')}}).catch((error)=>{console.error('Error:',error)})}
function dislikeComment(CommentID){fetch('backend/php/like_comment.php',{method:'POST',headers:{'Content-Type':'application/json',},body:JSON.stringify({CommentID:CommentID,action:'dislike'}),}).then(response=>response.json()).then(data=>{if(data.success){toggleLikeDislikeIcons(CommentID,'dislike')}else{console.log('Failed to record the dislike.')}}).catch((error)=>{console.error('Error:',error)})}
function toggleLikeDislikeIcons(CommentID,action){const likeIcon=document.querySelector(`#like-icon-${CommentID}`);const dislikeIcon=document.querySelector(`#dislike-icon-${CommentID}`);if(action==='like'){likeIcon.classList.add('solid-icon');dislikeIcon.classList.remove('solid-icon')}else if(action==='dislike'){dislikeIcon.classList.add('solid-icon');likeIcon.classList.remove('solid-icon')}}
function toggleReplyLikeDislikeIcons(RepliedCommentID,action){const likeCount=document.querySelector(`#like-count-${RepliedCommentID}`);const dislikeCount=document.querySelector(`#dislike-count-${RepliedCommentID}`);if(action==='like'){likeCount.textContent=parseInt(likeCount.textContent)+1;dislikeCount.textContent=Math.max(0,parseInt(dislikeCount.textContent)-1)}else if(action==='dislike'){dislikeCount.textContent=parseInt(dislikeCount.textContent)+1;likeCount.textContent=Math.max(0,parseInt(likeCount.textContent)-1)}}
function notifyUserToLogin(action){let decide;if(action===1){decide='like'}else{decide='dislike'}
alert(`Sign in with Google in order to ${decide} this comment!`);window.location.href='signin.php';return}